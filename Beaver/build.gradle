plugins {
	id 'application'
	id 'java'
	id 'eclipse'
	id 'checkstyle'
	id 'org.openjfx.javafxplugin' version '0.0.13'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

sourceCompatibility = 1.10
targetCompatibility = 1.10
description = 'Beaver:BillOfMaterials'
group = 'io.avalon.bom'
mainClassName = 'io.avalon.bom.BillOfMaterials'
version = '1.0'
applicationDefaultJvmArgs = ['-Dwebdriver.chrome.driver=../Groundhog/rsc/chromedriver.exe',
"-Dlog4j.configurationFile=file:../resources/log4j2.properties"]

javafx {
    version = "17.0.1"
    modules = [ 'javafx.controls' ]
}
sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources {
			srcDir 'src/main/resources'
		}
	}
}

shadowJar {
	archiveClassifier.set('')
	archiveVersion.set('')
	from sourceSets.main.output, sourceSets.test.output
	mergeServiceFiles {
		setPath("META-INF/services")
	}
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}
task devShadowJar(type: ShadowJar) {
    from 'src/main/resources/log4j2.properties'
}

eclipse {
	classpath {
		defaultOutputDir = file('bin')
	}
}
configurations {
	implementation {
		description = 'implementation classpath'
	}
	runtime {
		extendsFrom implementation
	}
}

repositories {
	mavenCentral()
    mavenLocal()
    maven {
        url = uri('https://nexus.gluonhq.com/nexus/content/repositories/releases/')
    }
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven {
        url = uri('https://mvnrepository.com/')
    }
}

configurations.implementation {
	exclude group: 'ch.qos.logback', module: 'logback-classic'	
	exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
}

dependencies {
	implementation 'org.springframework:spring-context:5.3.22'
//	implementation 'com.gluonhq:webscheduler:1.0.5'
	
//    implementation 'com.gluonhq.compat:javadate:1.1'
//    implementation 'com.gluonhq.compat:javafunctions:1.1'
//    implementation 'com.gluonhq.compat:javanio:1.2'
//    implementation 'org.openjfx:javafx-base:18-internal+0-2021-08-17-175730'
//    implementation 'org.openjfx:javafx-graphics:18-internal+0-2021-08-17-175730'
//    implementation 'org.openjfx:javafx-controls:18-internal+0-2021-08-17-175730'
//    implementation 'org.apidesign.bck2brwsr:emul:0.51'
//    implementation 'org.apidesign.bck2brwsr:emul.zip:0.51'
//    implementation 'org.apidesign.bck2brwsr:emul:0.51'
    testImplementation 'junit:junit:4.11'
	implementation "org.openjfx:javafx-base:11:win"
    implementation "org.openjfx:javafx-graphics:11:win"
    implementation "org.openjfx:javafx-controls:11:win"
    implementation "org.openjfx:javafx-fxml:11:win"
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
 	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.1'
    
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.7.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    
//    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.6'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.6'
    
	//Need to create new project so can use guava 19
//	implementation "org.openjfx:javafx-base:11:win"
//    implementation "org.openjfx:javafx-graphics:11:win"
//    implementation "org.openjfx:javafx-controls:11:win"
//    implementation "org.openjfx:javafx-fxml:11:win"
    
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
tasks.withType(Copy).all { duplicatesStrategy 'exclude' }
//tasks.withType(Jar) { duplicatesStrategy = DuplicatesStrategy.INHERIT }
task installResource(type: Copy) {
    from 'src/main/resources/log4j2.properties'
    into 'build/install/Beaver-shadow/resources/'
}
task installConfig(type: Copy) {
    from 'config/application.properties'
    into 'build/install/Beaver-shadow/bin/config/'
}
tasks.installConfig.dependsOn tasks.installShadowDist
tasks.installResource.dependsOn tasks.installConfig